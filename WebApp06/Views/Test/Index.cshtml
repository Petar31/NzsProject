
@{
    ViewData["Title"] = "Index";
}
<!-- include vue -->
<script src="~/lib/vue/dist/vue.min.js"></script>
<!-- axios -->
<script src="~/lib/axios/axios.min.js"></script>

<link rel="stylesheet" href="~/css/testIndex.css" />

<div class="row justify-content-center">
    <h2 class="text-warning">Random test</h2>
</div>

<div id="app">

    <div class="row">

        <div class="col-sm-2 form-group">
            <h6 class="text-center">Select subject</h6>
            <select class="form-control" id="selectSubject" ref="selectSubject" v-model="postObject.subject" v-on:change="getGrades($event)">
                <option disabled value="">Select subject</option>
                <option v-for="sub in subjects" v-bind:value="sub.id">{{sub.name}}</option>
            </select>
        </div>

        <div class="col-sm-2">
            <h6 class="text-center">Select grade</h6>
            <select class="form-control" id="selectGrade" ref="selectGrade" v-on:change="getLevels($event)" v-model="postObject.grade">
                <option disabled selected value="">{{first[0]}}</option>
                <option v-for="grade in grades" v-bind:value="grade">{{grade}}</option>
            </select>
        </div>
        <div class="col-sm-2">
            <h6 class="text-center">Select level 1</h6>
            <select class="form-control" id="selectLevel1" v-model="postObject.level1">
                <option disabled value="">{{first[1]}}</option>
                <option v-for="x in levels[0]" v-bind:value="x">{{x}}</option>
            </select>
        </div>
        <div class="col-sm-2">
            <h6 class="text-center">Select level 2</h6>
            <select class="form-control" id="selectLevel2" v-model="postObject.level2">
                <option disabled value="">{{first[2]}}</option>
                <option v-for="x in levels[1]" v-bind:value="x">{{x}}</option>
            </select>
        </div>
        <div class="col-sm-2">
            <h6 class="text-center">Select level 3</h6>
            <select class="form-control" id="selectLevel3" v-model="postObject.level3">
                <option disabled value="">{{first[3]}}</option>
                <option v-for="x in levels[2]" v-bind:value="x">{{x}}</option>
            </select>
        </div>
        <div class="col-sm-2 d-flex align-items-center">
            <input type="submit" class="btn btn-success" value="Submit" v-on:click="submitObject()" />
        </div>
    </div>

    <hr />
    <div class="row" id="res">
    <div class="offset-2 col-sm-6">
        <div class="card" v-if="questions.length > 0" v-for="question in questions">
            <div class="card-header bg-success text-light d-flex justify-content-between">
                <span style="width:80%;">{{question.context}}</span>
                <button class="btn btn-sm btn-outline-light" style="width:15%; height:30px;"  v-on:click="toggle(question.id)">Answers</button>
            </div>
            <div class="card-body" v-bind:id="question.id" style="display:none;">
                <ul >
                    <li>{{question.correctAnswer}}</li>
                    <li>{{question.wrongAnswer1}}</li>
                    <li>{{question.wrongAnswer2}}</li>
                    <li>{{question.wrongAnswer3}}</li>
                </ul>
                
            </div>

           
        </div>
    </div>

    <div class="offset-2 col-sm-2">
        <label>Group</label>
        <select class="form-control" v-model="group">
            <option disabled value="">{{first[4]}}</option>
            <option v-for="n in 4" v-bind:value="n">{{n}}</option>
        </select>
        <span class="text-danger">{{valMsg1}}</span><br />
        <input type="text" class="form-control" placeholder="Insert name" v-model="testName" />
        <span class="text-danger">{{valMsg2}}</span><br />
        <button class="btn btn-warning" v-on:click="saveTest()">Save test</button>
        <div class="text-danger">{{message}}</div>
    </div>
        
    </div>

</div>



<script>

    let vue = new Vue({
        el: "#app",
        created() {
            this.fetchData();
        },
        data: {
            group : '',
            subjects: [],
            grades: [],
            levels: [],
            first: [
                'Select grade',
                'Select level 1',
                'Select level 2',
                'Select level 3',
                'Select group'

            ],
            postObject: {
                subject: '',
                grade: '',
                level1: '',
                level2: '',
                level3: ''
            },
            questions: '',
            testIds: [],
            message: '',
            testName: "",
            valMsg1: "",
            valMsg2 : ""


        },
        methods: {
            fetchData() {
                axios.get("/Test/GetSubjectsAsync").then(x => this.subjects = x.data);
            },
            getGrades(event) {
                //document.getElementById("res").style.visibility = "hidden";
                axios.get(`/Test/GetGrades?subjectId=${event.target.value}`).then(x => this.grades = x.data);
            },
            getLevels(event) {
                //document.getElementById("res").style.visibility = "hidden";
                axios.get(`/Test/GetLevels?grade=${event.target.value}&subjectId=${this.$refs.selectSubject.value}`).then(x => this.levels = x.data);
            },          
            submitObject() {
                axios({
                    method: "post",
                    url: "/Test/GenerateTest",
                    data: {
                        "Subject": this.postObject.subject,
                        "Grade": this.postObject.grade,
                        "Level1": this.postObject.level1,
                        "Level2": this.postObject.level2,
                        "Level3": this.postObject.level3,

                    }
                }).then(x => { this.questions = x.data; document.getElementById("res").style.visibility = "visible"; this.message = ""; this.testIds = []; }).catch(error => this.questions = error);
            },

            saveTest() {
                for (var i in this.questions) {
                    this.testIds.push(this.questions[i].id);

                }
                if (this.group == "" || this.testName == "") {
                    if (this.group == "") {
                        this.valMsg1 = "Group is required"
                         
                    } else {
                         this.valMsg1 = "";
                     }
                    if (this.testName == "") {
                        this.valMsg2 = "Name is required"
                        
                      }else {
                     this.valMsg2 = "";
                    }
                    return false;
                }
                
                console.log(this.testIds);
                axios({
                    method: "post",
                    url: "/Test/SaveTest",
                    data: {
                        "TestName": this.testName,
                        "Group": this.group,
                        "Ids": this.testIds,
                        "SubjectId": this.postObject.subject
                    }
                }).then(x => { this.message = x.data }).catch(error => this.message = error);
            },

            toggle(id) {
                var ul = document.getElementById(id);
                if (ul.style.display == "none") {
                    ul.style.display = "block";
                } else {
                    ul.style.display = "none";
                }
             }
        }

    })


        





</script>



